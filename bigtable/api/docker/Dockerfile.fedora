# Create a docker image with the C++ Google API examples built into it.
# This Dockerfile requires docker 17 or higher, it uses an argument to set
# the base image version, which was not supported in early versions of docker.
ARG DISTRO_VERSION=24
FROM ubuntu:$DISTRO_VERSION
MAINTAINER "Carlos O'Ryan <coryan@google.com>"

# Install the pre-requisites, the long command line is to create as few
# layers as possible in the image ...
RUN dnf makecache && \
  dnf install -y
    autoconf \
    autoconf-archive \
    automake \
    clang \
    cmake \
    curl \
    gcc-g++ \
    git \
    libtool \
    make \
    pkg-config \
    shtool \
    wget && \
  dnf clean all

WORKDIR /var/tmp/build-grpc
RUN (git clone https://github.com/grpc/grpc.git && \
    cd grpc && git pull && git submodule update --init && \
    make -j 2 && make install && \
    cd third_party/protobuf && make install)

# ... configure what we build based on the Travis build ...
ARG TRAVIS_EVENT_TYPE=cron
ARG TRAVIS_REPO_SLUG=coryan/cpp-docs-samples
ARG TRAVIS_COMMIT=
ARG CXX_COMPILER=clang

# TODO() - we should deal with pull requests differently ...
WORKDIR /var/tmp/build-samples
RUN echo COMMIT = ${TRAVIS_COMMIT} # bust the docker cache for each build
RUN git clone https://github.com/${TRAVIS_REPO_SLUG}.git ${TRAVIS_REPO_SLUG}

# ... in the travis builds, this checks out the same commit that
# Travis is trying to build, when testing it just checksout the default
# branch
WORKDIR /var/tmp/build-samples/$TRAVIS_REPO_SLUG
RUN if test "x${TRAVIS_COMMIT}" != "x"; then git checkout ${TRAVIS_COMMIT}; fi

RUN (git submodule update --init && \
     cd bigtable/api && \
     make -C googleapis OUTPUT=$PWD/googleapis-gens && \
     cmake -DCMAKE_CXX_COMPILER=clang++ . && make)

WORKDIR /
