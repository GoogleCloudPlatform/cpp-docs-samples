language: cpp

dist: trusty
sudo: required

matrix:
  include:
    - os: linux
      compiler: clang
      env: DOCKER_BUILD=no
    - os: linux
      compiler: clang
      env: DOCKER_BUILD=yes DISTRO=ubuntu DISTRO_VERSION=16.04
    - os: linux
      compiler: clang
      env: DOCKER_BUILD=yes DISTRO=ubuntu DISTRO_VERSION=17.04

script:
  - (test "${DOCKER_BUILD?}" = "no" && cd bigtable/api &&
        make -C googleapis OUTPUT=$PWD/googleapis-gens)
  - (test "${DOCKER_BUILD?}" = "no" && cd bigtable/api &&
        cmake -DCMAKE_CXX_COMPILER=${CXX} . && make)
  - (test "${DOCKER_BUILD?}" = "yes" && echo DISTRO=$DISTRO &&
        echo DISTRO_VERSION=${DISTRO_VERSION} && echo CXX=${CXX})

addons:
  apt:
    packages:
      - curl
      - git-core
      - make
      - gcc
      - g++
      - build-essential
      - autoconf
      - automake
      - autoconf-archive
      - libtool
      - pkg-config
      - cmake
      - clang++-3.9

# Cache the grpc directory because building it takes so long ...
cache:
  directories:
    - grpc-build

install:
  # Make clang++-3.9 available as clang++
  - ls -l /usr/bin/clang++ || echo "cannot find clang++ in /usr/bin"
  - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.9 100
  - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.9 100
  - sudo update-alternatives --display clang++ || echo ""
  - /usr/bin/clang++ --version
  - clang++ --version
  # If needed clone the grpc directory
  - test -d grpc-build/grpc/.git || git clone https://github.com/grpc/grpc.git grpc-build/grpc
  # needed or not, update the grpc directory ...
  - (cd grpc-build/grpc && git pull && git submodule update --init)
  # build and install in $HOME/local
  - (cd grpc-build/grpc && make -j 2 && sudo make install)
  - (cd grpc-build/grpc/third_party/protobuf && sudo make install)

notifications:
  email: false
