language: cpp

dist: trusty
sudo: required

matrix:
  include:
    - os: linux
      compiler: clang
      env: DOCKER_BUILD=no CXX_COMPILER=/usr/bin/clang++
    - os: linux
      compiler: gcc
      env: DOCKER_BUILD=no CXX_COMPILER=/usr/bin/g++
    - os: linux
      compiler: clang
      env: DOCKER_BUILD=not-yet DISTRO=ubuntu DISTRO_VERSION=14.04
    - os: linux
      compiler: clang
      env: DOCKER_BUILD=not-yet DISTRO=ubuntu DISTRO_VERSION=16.04
    - os: linux
      compiler: clang
      env: DOCKER_BUILD=not-yet DISTRO=ubuntu DISTRO_VERSION=17.04
    - os: linux
      compiler: clang
      env: DOCKER_BUILD=not-yet DISTRO=fedora DISTRO_VERSION=24
    - os: linux
      compiler: clang
      env: DOCKER_BUILD=not-yet DISTRO=fedora DISTRO_VERSION=25

script:
  - if [ "${DOCKER_BUILD?}" = "no" ]; then
      (cd bigtable/api && make -C googleapis OUTPUT=$PWD/googleapis-gens &&
       cmake -DCMAKE_CXX_COMPILER=${CXX_COMPILER} . && make);
    fi
  - if [ "${DOCKER_BUILD?}" = "yes" ]; then
      (cd bigtable/api && docker build
          -t cached-${DISTRO?}-${DISTRO_VERSION?}
          --build-arg DISTRO_VERSION=${DISTRO_VERSION?}
	  --build-arg TRAVIS_REPO_SLUG=$go{TRAVIS_REPO_SLUG}
	  --build-arg TRAVIS_EVENT_TYPE=${TRAVIS_EVENT_TYPE}
	  --build-arg TRAVIS_COMMIT=${TRAVIS_COMMIT}
          -f docker/Dockerfile.${DISTRO?} docker/);
    fi

addons:
  apt:
    packages:
      - curl
      - git-core
      - make
      - gcc
      - g++
      - build-essential
      - autoconf
      - automake
      - autoconf-archive
      - libtool
      - pkg-config
      - cmake
      - clang++-3.9

# Cache the grpc directory because building it takes so long ...
cache:
  directories:
    - grpc-build/gcc
    - grpc-build/clang
    - docker-images/ubuntu/14.04
    - docker-images/ubuntu/16.04
    - docker-images/ubuntu/17.04
    - docker-images/fedora/24
    - docker-images/fedora/25

install:
  # Install and build the dependencies needed in one of the cached
  # directories, that makes the next build slightly faster ...
  - if [ "${DOCKER_BUILD?}" = "no" ]; then
      sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.9 100;
      sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.9 100;
      sudo update-alternatives --display clang++ || echo "";
      test -d grpc-build/${CC?}/grpc/.git ||
        git clone https://github.com/grpc/grpc.git grpc-build/${CC?}/grpc;
      (cd grpc-build/${CC?}/grpc && git pull && git submodule update --init);
      (cd grpc-build/${CC?}/grpc && make -j 2 && sudo make install);
      (cd grpc-build/${CC?}/grpc/third_party/protobuf && sudo make install);
    fi
  # Restore the docker image from the cached directory.  That way we
  # can reuse the steps in the docker image that install
  # pre-requisites and build dependencies ...
  - if [ "${DOCKER_BUILD?}" = "yes" ]; then
      sudo docker load <${DISTRO}/${DISTRO_VERSION}/saved.tar.gz
    fi
  - docker image ls
  - ls /usr/local/lib/pkgconfig

after_success:
  - if [ "${DOCKER_BUILD?}" = "yes" ]; then
      sudo docker save cached-${DISTRO}-${DISTRO_VERSION} |
        gzip > docker-images/${DISTRO}/${DISTRO_VERSION}/saved.tar.gz;
    fi

notifications:
  email: false
